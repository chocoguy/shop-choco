[{"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\index.js":"1","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\App.jsx":"2","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\store.js":"3","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Footer.jsx":"4","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Header.jsx":"5","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\rootReducer.js":"6","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\HomeScreen.jsx":"7","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\ProductScreen.jsx":"8","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Product.jsx":"9","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\product\\productReducer.js":"10","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\product\\productAction.js":"11","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Rating.jsx":"12","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\constants.js":"13","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\CartScreen.jsx":"14","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\cart\\cartReducer.js":"15","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\cart\\cartAction.js":"16","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Message.jsx":"17","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\user\\userReducer.js":"18","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\LoginScreen.jsx":"19","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\FormContainer.jsx":"20","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\user\\userAction.js":"21","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\RegisterScreen.jsx":"22","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\ProfileScreen.jsx":"23"},{"size":469,"mtime":1607623506020,"results":"24","hashOfConfig":"25"},{"size":1233,"mtime":1608244292298,"results":"26","hashOfConfig":"25"},{"size":727,"mtime":1607988096737,"results":"27","hashOfConfig":"25"},{"size":355,"mtime":1607623506030,"results":"28","hashOfConfig":"25"},{"size":1772,"mtime":1608172019181,"results":"29","hashOfConfig":"25"},{"size":707,"mtime":1608255286676,"results":"30","hashOfConfig":"25"},{"size":1246,"mtime":1607623506030,"results":"31","hashOfConfig":"25"},{"size":5379,"mtime":1607636653241,"results":"32","hashOfConfig":"25"},{"size":883,"mtime":1607623506030,"results":"33","hashOfConfig":"25"},{"size":1031,"mtime":1607623506040,"results":"34","hashOfConfig":"25"},{"size":1232,"mtime":1607623506030,"results":"35","hashOfConfig":"25"},{"size":1182,"mtime":1607623506030,"results":"36","hashOfConfig":"25"},{"size":1299,"mtime":1608255262374,"results":"37","hashOfConfig":"25"},{"size":3802,"mtime":1607736569858,"results":"38","hashOfConfig":"25"},{"size":1037,"mtime":1607736580694,"results":"39","hashOfConfig":"25"},{"size":844,"mtime":1607736580694,"results":"40","hashOfConfig":"25"},{"size":338,"mtime":1607623506030,"results":"41","hashOfConfig":"25"},{"size":2110,"mtime":1608251323261,"results":"42","hashOfConfig":"25"},{"size":2238,"mtime":1607994100104,"results":"43","hashOfConfig":"25"},{"size":390,"mtime":1607990073002,"results":"44","hashOfConfig":"25"},{"size":3915,"mtime":1608251552007,"results":"45","hashOfConfig":"25"},{"size":3339,"mtime":1608229931589,"results":"46","hashOfConfig":"25"},{"size":3739,"mtime":1608255214689,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"14vko8v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\index.js",[],["101","102"],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\App.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\store.js",["103"],"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer.js';\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n    cart: {cartItems: cartItemsFromStorage},\n    userLogin : { userInfo : userInfoFromStorage }\n};\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware (...middleware)));\n\nexport default store;","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Footer.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Header.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\rootReducer.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\HomeScreen.jsx",["104"],"import React, { useState, useEffect, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product.jsx';\nimport { listProducts } from '../redux/product/productAction';\n//import Message from '../components/Message.jsx';\n//import Loader from '../components/Loader.jsx';\n\n\n\nconst HomeScreen = () => {\n\n    const dispatch = useDispatch()\n\n    //const [products, setProducts] = useState([])\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } = productList\n\n    useEffect(() => {\n        dispatch(listProducts())\n    }, [dispatch]);\n\n\n    return (\n        <Fragment>\n            <h1>Latest Products</h1>\n            { loading ? <h1>loading..</h1>: error ? <h1>Error</h1> : (\n                <Row>\n                    {products.map(product => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                            <Product  product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n        </Fragment>\n    )\n}\n\nexport default HomeScreen\n\n//? quick and easy to use key={Math.random() * (900000 - 1 )+ 1}","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\ProductScreen.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Product.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\product\\productReducer.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\product\\productAction.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Rating.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\constants.js",[],["105","106"],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\CartScreen.jsx",["107"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../redux/cart/cartAction';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n        console.log('removed')\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        console.log('Checkout')\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping cart</h1>\r\n                {cartItems.length === 0 ? (<h1>Cart is empty</h1>) : (<ListGroup variant='flush'>\r\n                {cartItems.map(item => (\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>${item.price}</Col>\r\n                            <Col md={2}>\r\n                            <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\r\n                                                        {\r\n                                                       [...Array(item.countInStock).keys()].map((x) => (\r\n                                                           <option key={x + 1} value={x + 1}>\r\n                                                               {x + 1}\r\n                                                           </option>\r\n                                                       ))\r\n                                                        }   \r\n                                                    </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n                </ListGroup>)}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                Checkout!\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\cart\\cartReducer.js",["108"],"import { SchemaType } from 'mongoose';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants.js'\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload) //only return items that are not the id of the deleted item\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\cart\\cartAction.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\Message.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\user\\userReducer.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\components\\FormContainer.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\redux\\user\\userAction.js",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\ezarc\\Documents\\Code\\proshop\\view\\src\\screens\\ProfileScreen.jsx",["109","110"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport  { register } from '../redux/user/userAction.js'\r\nimport Message from '../components/Message.jsx';\r\nimport { getUserDetails, updateUserProfile } from '../redux/user/userAction.js'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n  \r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        } else{\r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                console.log(user.name)\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords don not match')\r\n        }else{\r\n            //TODO dispatch update profile\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n        //dispatch register\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h2>User Profile</h2>\r\n            {message && <Message variatn='danger'>{message}</Message>}\r\n            { error && <h1>Error</h1> }\r\n            { success && <h1>Updated</h1> }\r\n            { loading && <h1>Loading.</h1> }\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                    \r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                    \r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>My orders</h2>\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":23,"nodeType":"117","messageId":"118","endLine":1,"endColumn":38},{"ruleId":"115","severity":1,"message":"119","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","severity":1,"message":"122","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":15},{"ruleId":"115","severity":1,"message":"123","line":1,"column":10,"nodeType":"117","messageId":"118","endLine":1,"endColumn":20},{"ruleId":"115","severity":1,"message":"124","line":2,"column":10,"nodeType":"117","messageId":"118","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"125","line":5,"column":11,"nodeType":"117","messageId":"118","endLine":5,"endColumn":19},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["126"],["127"],"'Message' is defined but never used.","'SchemaType' is defined but never used.","'Link' is defined but never used.","'register' is defined but never used.","no-global-assign","no-unsafe-negation"]